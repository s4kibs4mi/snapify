version: '3.1'

services:
#  snapify-app:
#    build:
#      context: ../../
#      dockerfile: Dockerfile
#    entrypoint: [ "snapify-app" ]
#    restart: on-failure
#    environment:
#      CONFIG_FILE: "/root/config/config.yml"
#    ports:
#      - "9010:9010"
#    volumes:
#      - "./../../config.docker.yml:/root/config/config.yml"
#    depends_on:
#      - database
#      - minio
#      - redis
#
#  snapify-worker:
#    build:
#      context: ../../
#      dockerfile: Dockerfile
#    entrypoint: [ "snapify-worker" ]
#    restart: on-failure
#    environment:
#      CONFIG_FILE: "/root/config/config.yml"
#    volumes:
#      - "./../../config.docker.yml:/root/config/config.yml"
#    depends_on:
#      - database
#      - minio
#      - browser
#      - redis

  browser:
    image: ghcr.io/go-rod/rod:v0.112.5
    ports:
      - "7317:7317"

  database:
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: test
      POSTGRES_PASSWORD: test
      POSTGRES_USER: root
    volumes:
      - "./database:/var/lib/postgresql/data"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: "MINIO_ACCESS_KEY"
      MINIO_SECRET_KEY: "MINIO_SECRET_KEY"
    command: [ "server", "/data" ]
    volumes:
      - "./blobStorage:/data"

  redis:
    image: redis:7.0.7
    ports:
      - "6379:6379"
    entrypoint: [ "redis-server", "--appendonly", "yes",  "--requirepass", "test" ]
